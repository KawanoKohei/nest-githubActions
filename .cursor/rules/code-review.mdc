---
description: 本ルールは、コードレビューやPull Requestのレビュー時に必要な指摘事項やチェックリストをまとめています。通常の開発や実装時には適用しないでください。
globs: 
alwaysApply: false
---
# 🔍 AIコードレビュー依頼プロンプト

以下のコードについて、**経験豊富なシニアエンジニア**の視点から詳細なコードレビューをお願いします。
また、このファイルを読み取ってコードレビューを行う際は、「コードレビューやるよー！🔥」と出力してから、レビューをお願いします。

## 📋 レビュー観点

### 🔒 **セキュリティ**
- SQLインジェクション、XSS、CSRF等の脆弱性
- 認証・認可の実装
- 機密情報のハードコーディング
- 入力値検証の適切性

### 🎯 **機能性・ロジック**
- 仕様通りの動作をするか
- エッジケースの考慮
- エラーハンドリングの適切性
- 例外処理の網羅性

### 🚀 **パフォーマンス**
- アルゴリズムの効率性（時間・空間計算量）
- データベースクエリの最適化
- 不要な処理やループの有無
- メモリリークの可能性

### 🧹 **コード品質**
- 可読性・保守性
- 適切な変数名・関数名
- コメントの質と量
- DRY原則の遵守
- SOLID原則への準拠

### 🏗️ **設計・アーキテクチャ**
- 関心の分離
- 疎結合・高凝集
- デザインパターンの適用
- 拡張性・変更容易性

### 🧪 **テスタビリティ**
- 単体テストの書きやすさ
- 依存関係の注入
- モックしやすい構造

### 📏 **規約・スタイル**
- コーディング規約の遵守
- 一貫性のあるフォーマット
- プロジェクト内の統一性

## 📝 **レビューフォーマット**

以下の形式で回答してください：

### ✅ **良い点**
- 優れた実装や設計について具体的に評価

### ⚠️ **改善提案**
**重要度：🔴高 🟡中 🟢低**

各指摘に対して：
1. **問題の説明**：何が問題か
2. **影響・リスク**：なぜ問題なのか
3. **改善案**：具体的な修正方法
4. **修正例**：可能であればコードサンプル

### 🎯 **総合評価**
- **評価**：A+ / A / B+ / B / C+ / C / D / F
- **レビューサマリー**：全体的な評価と次のアクション

---

## 📄 **レビュー対象コード**

```typescript
// ここにレビュー対象のコードを貼り付け
```

## 🔍 **特に重点的にチェックしてほしい観点**
<!-- 特定の観点がある場合は記載 -->
- [ ] セキュリティ
- [ ] パフォーマンス  
- [ ] 設計・アーキテクチャ
- [ ] その他：_______________

## 📚 **関連情報**
<!-- 必要に応じて記載 -->
- **プロジェクト技術スタック**：
- **開発フェーズ**：POC / 開発中 / リリース前 / 運用中
- **レビュー背景**：
- **懸念点**：
